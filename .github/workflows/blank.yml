name: GalaxyKick Service
on:
  workflow_dispatch:
    inputs:
      username:
        description: 'Username to use as subdomain'
        required: true
        type: string

jobs:
  expose:
    name: Run for ${{ inputs.username }}
    runs-on: ubuntu-latest
    timeout-minutes: 60 
    env:
      PORT: 7860
      IMAGE_NAME: bharanidharan/galaxykick
      IMAGE_TAG: v208
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Convert username to lowercase
        run: echo "LOWERCASE_USERNAME=$(echo ${{ inputs.username }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Pull and run Docker container
        run: |
          # Pull only if image doesn't exist locally
          if ! docker image inspect $IMAGE_NAME:$IMAGE_TAG &>/dev/null; then
            echo "Pulling Docker image..."
            docker pull $IMAGE_NAME:$IMAGE_TAG
          else
            echo "Using cached Docker image..."
          fi
          
          docker run -d \
            --name galaxykick \
            -p $PORT:$PORT \
            $IMAGE_NAME:$IMAGE_TAG
            
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Setup SSH for Serveo
        run: |
          # Generate SSH key for serveo
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/serveo_key -N ""
          chmod 600 ~/.ssh/serveo_key
        
      - name: Configure network and firewall settings
        run: |
          # Allow all outbound connections
          sudo iptables -P OUTPUT ACCEPT
          sudo iptables -F OUTPUT
          
          # Allow SSH port for Serveo
          sudo iptables -A OUTPUT -p tcp --dport 22 -j ACCEPT
          sudo iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
          sudo iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT
          
          # Test connectivity
          echo "Testing Serveo connectivity..."
          timeout 10 nc -zv serveo.net 22 2>&1 || echo "serveo.net:22 failed"
          
      - name: Start tunnels with backup support
        run: |
          # Wait for Docker container to be running
          echo "Waiting for Docker container to be ready..."
          sleep 30
          
          # Check container status
          if ! docker ps | grep -q galaxykick; then
            echo "Container not running, checking logs:"
            docker logs galaxykick
            exit 1
          fi
          
          # Check what's happening with the container
          echo "Container status:"
          docker ps -a | grep galaxykick
          echo "Container logs:"
          docker logs galaxykick
          echo "Port check:"
          netstat -tlnp | grep $PORT || echo "Port $PORT not listening"
          
          # Test local service (non-blocking)
          echo "Testing local service..."
          if curl -f http://localhost:$PORT >/dev/null 2>&1; then
            echo "Service is responding!"
          else
            echo "Service not responding yet, but proceeding with tunnels..."
            echo "The service may start after tunnels are created."
          fi
          
          # Start Serveo tunnels with custom subdomains
          echo "Starting Serveo tunnels with custom subdomains..."
          
          # Primary tunnel with custom subdomain
          ssh -i ~/.ssh/serveo_key -o StrictHostKeyChecking=no -R $LOWERCASE_USERNAME:80:localhost:$PORT serveo.net > /tmp/tunnel1.log 2>&1 &
          sleep 10
          
          # Backup tunnels
          ssh -i ~/.ssh/serveo_key -o StrictHostKeyChecking=no -R ${LOWERCASE_USERNAME}2:80:localhost:$PORT serveo.net > /tmp/tunnel2.log 2>&1 &
          sleep 10
          
          ssh -i ~/.ssh/serveo_key -o StrictHostKeyChecking=no -R ${LOWERCASE_USERNAME}3:80:localhost:$PORT serveo.net > /tmp/tunnel3.log 2>&1 &
          sleep 15
          
          echo "Custom Subdomain URLs:"
          echo "Primary: https://$LOWERCASE_USERNAME.serveo.net"
          echo "Backup 1: https://${LOWERCASE_USERNAME}2.serveo.net"
          echo "Backup 2: https://${LOWERCASE_USERNAME}3.serveo.net"
          
          # Test primary tunnel
          echo "Testing primary tunnel..."
          sleep 10
          curl -I "https://$LOWERCASE_USERNAME.serveo.net" || echo "Tunnel test failed, but service may still work"
          
          echo "Setup complete! Custom subdomains active with no rate limits."
          
          # Keep alive
          while true; do
            sleep 60
            echo "[$(date)] Smart load balancer active"
          done
          while true; do
            sleep 60
            echo "[$(date)] Smart load balancer active"
          done
